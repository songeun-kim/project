package co.kr.playbowling.dao;

import java.util.HashMap;
import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Repository;

import co.kr.playbowling.vo.BoardVO;

import org.apache.ibatis.session.SqlSession;

@Repository
public class BoardDAOImpl implements BoardDAO {

    @Inject SqlSession sqlsession;
	private static String namespace = "mappers.boardMapper";
	 
	//게시글 쓰기
	@Override
	public void write(BoardVO vo) throws Exception {
		String bid = vo.getBid();
		sqlsession.insert(namespace+".write", vo);
	}
	
	// 게시글 읽기
	@Override
	public BoardVO read(int bnum) throws Exception {
		
		return sqlsession.selectOne(namespace+".read",bnum);

	}
	
	//게시글 수정
	@Override
	public void update(BoardVO vo) throws Exception {
		sqlsession.update(namespace+".update",vo);
	}

	@Override
	public void delete(int bnum) throws Exception {
		sqlsession.delete(namespace+".delete", bnum);
	}

	//게시글 목록
	@Override
	public List<BoardVO> listAll() throws Exception {
		return sqlsession.selectList(namespace+".listAll");
	}
	
	// 조회수 증가
	@Override
	public void updateReadCount(int bnum) throws Exception {
		sqlsession.update(namespace +".updateReadCount", bnum);
	}
	
	//총 게시물 갯수 증가
	@Override
	public int boardCount() throws Exception {
		return sqlsession.selectOne(namespace+".boardCount");
	}
	
	//페이징처리
	@Override
	public List listPage(int displayPost, int postNum) throws Exception {
		HashMap data = new HashMap();
		data.put("displayPost", displayPost);
		data.put("postNum", postNum);
		
		return sqlsession.selectList(namespace+".listPage",data);
	}
	
	// 게시물 목록 + 페이징 + 검색
	 @Override
	 public List<BoardVO> listPageSearch(
	   int displayPost, int postNum, String searchType, String keyword) throws Exception {

	  HashMap<String, Object> data = new HashMap<String, Object>();
	  
	  data.put("displayPost", displayPost);
	  data.put("postNum", postNum);
	  
	  data.put("searchType", searchType);
	  data.put("keyword", keyword);
	  
	  return sqlsession.selectList(namespace + ".listPageSearch", data);
	 }

	@Override
	public int searchCount(String searchType, String keyword) throws Exception {
		HashMap data = new HashMap();
		
		data.put("searchType", searchType);
		data.put("keyword", keyword);
		
		return sqlsession.selectOne(namespace+".searchCount",data);
	}
	

}
